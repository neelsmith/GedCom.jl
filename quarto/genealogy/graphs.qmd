---
engine: julia
---

# Graphs (networks) of relations


Get a representation of the individuals in a `Genealogy` as a Julia `SimpleValueGraph`:

```{julia}
using GedCom
root = pwd() |> dirname |> dirname
f = joinpath(root, "test", "data", "pres2020.ged")
gen = genealogy_g5(f)
gengraph = genealogyGraph(gen)
```



## Labels for vertices

Cycle through the vertices, and collect in a named tuple the verex index goether with the name value:

```{julia}
using SimpleValueGraphs
vlist = vertices(gengraph) |> collect
nameidx = map(vlist) do i
    (v = i, name = get_vertexval(gengraph, i, :name))
end
```



## Values for edges

Relations: edges pair two vertices; in our graph, they have a `relation` property.



```{julia}
elist = collect(edges(gengraph))
sourcev = elist[1].src
targetv = elist[1].dst
rel = get_edgeval(gengraph,sourcev,targetv)
sourcename = filter(t -> t.v == sourcev, nameidx)[1].name
targetname = filter(t -> t.v == targetv, nameidx)[1].name
string("Relation of ", sourcename, " to ", targetname, ": ", rel)
```